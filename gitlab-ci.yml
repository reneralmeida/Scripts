#Frontend
react_build_stage:
  rules:
    - if: $CI_COMMIT_REF_NAME != "main"
      when: never
    - changes:
      - frontend/**/*  
  stage: build
  cache:
    paths:
      - /frontend/node_modules/
  image: node:16.14.2-alpine
  environment:
    name: production_react
  script:
    - cd frontend
    - mv .env_prod .env
    - CI=false npm install
    - CI=false npm run build
  artifacts:
    expire_in: 20 mins
    paths:
      - frontend/build/

react_deploy_stage:
  rules:
    - if: $CI_COMMIT_REF_NAME != "main"
      when: never
    - changes:
      - frontend/**/*  
  stage: deploy
  image: python:latest
  environment:
    name: production_react
  script:
    - pip install awscli
    - aws s3 rm s3://$S3_BUCKET --recursive
    - aws s3 cp frontend/build/ s3://$S3_BUCKET --recursive
    - aws s3 rm s3://$S3_FINAL --recursive
    - aws s3 cp frontend/build/ s3://$S3_FINAL --recursive
  dependencies:
    - react_build_stage                 

#Backend
springboot_build_stage:
    rules:
    - if: $CI_COMMIT_REF_NAME != "main"
      when: never
    - changes:
      - backend/**/*  
    stage: build
    image: maven:3-openjdk-11
    environment:
      name: production_springboot
    script:
      - cd backend
      - echo "Building app..."
      - mvn clean install
      - echo "Finished building the app." 
    artifacts:
      expire_in: 1 day
      paths:
          - backend/target/ecotur-digitalbooking-0.0.1-SNAPSHOT.jar

springboot_deploy_stage:
    rules:
    - if: $CI_COMMIT_REF_NAME != "main"
      when: never
    - changes:
      - backend/**/*      
    stage: deploy
    image: alpine:latest
    environment:
      name: production_springboot
    before_script:
        - apk update && apk add openssh-client bash
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - touch ~/.ssh/config
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
    script:
        - echo "Deploying started..."
        - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop consoleapp.service"
        - scp ./backend/target/ecotur-digitalbooking-0.0.1-SNAPSHOT.jar ubuntu@$DEPLOY_SERVER_IP:~/projeto-integrador-v1.0_equipe7/backend/target
        - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start consoleapp.service"
        - echo "Finished deploying the app."
    dependencies:
        - springboot_build_stage     